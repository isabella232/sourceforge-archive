<!--
========================================================================
 Copyright (c) 1999 Mort Bay Consulting (Australia) Pty. Ltd.
 $Id$
========================================================================
 This build file specifies how to test Jetty using ANT, the
 build tool from the Apache/Jakarta project.
  <http://jakarta.apache.org/ant/index.html>
========================================================================

The default target is "test", which will build all tests and run them.

Other targets:

  clean         - Remove all generated files.
  prepare       - Set up build directory structure.

!!NOTE: To run these tests you must have previously downloaded and installed 
the Ant optional tasks from:

   http://jakarta.apache.org/ant
-->

<project name="Jetty HTTP Server Tests" default="test" basedir="..">


  <!-- ==================================================================== -->
  <property name="build.compiler"            value="modern" />
  <property name="build.compiler.emacs"      value="true" />
  <property name="build.compiler.fulldepend" value="false" />
  <property name="build.compiler.pedantic"   value="false" />
  <property name="javac.debug"               value="on" />
  <property name="javac.optimize"            value="off" />
  <property name="javac.deprecation"         value="off" />

  <!-- ==================================================================== -->
  <property environment="env"/>
  <property name="src"            value="${basedir}/src" />
  <property name="src1.4"         value="${basedir}/src1.4" />
  <property name="etc"            value="${basedir}/etc" />
  <property name="lib"            value="${basedir}/lib"/>
  <property name="ext"            value="${basedir}/ext"/>
  <property name="classes"        value="${basedir}/classes"/>
  <property name="classes1.4"     value="${basedir}/classes1.4"/>
  <property name="javadoc"        value="${basedir}/javadoc"/>
  <property name="logs"           value="${basedir}/logs"/>
  <property name="webapps"        value="${basedir}/webapps"/>
  <property name="demo.webapps"   value="${basedir}/demo/webapps"/>
  <property name="demo.src"       value="${basedir}/demo/src"/>
  <property name="test"           value="${basedir}/test"/>
  <property name="test.src"       value="${test}/src"/>
  <property name="test.classes"   value="${test}/classes"/>
  <property name="test.results"   value="${test}/results"/>

  <property name="jetty.home"             value="${basedir}" />
  <property name="jetty.webapp"           value="${webapps}/jetty"/>
  <property name="jetty.war"              value="${webapps}/jetty.war"/>
  <property name="jetty.webapp.webinf"    value="${jetty.webapp}/WEB-INF"/>
  <property name="jetty.webapp.classes"   value="${jetty.webapp.webinf}/classes"/>

  <property name="jetty.jar"      value="${lib}/org.mortbay.jetty.jar"/>
  <property name="mini.http.jar"  value="${basedir}/org.mortbay.http.jar"/>
  <property name="mortbay.jmx.jar" value="${lib}/org.mortbay.jmx.jar"/>
  <property name="servlet.jar"    value="${lib}/javax.servlet.jar"/>
  <property name="jasper.jar"     value="${lib}/org.apache.jasper.jar"/>

  <!-- ==================================================================== -->
  <target name="classpath" depends="is.jdk1.4.available,classpath1.2,classpath1.4"/>
  <target name="is.jdk1.4.available">
    <available property="jdk1.4.available" classname="java.util.logging.Handler" />
  </target>

  <!-- ==================================================================== -->
  <target name="classpath1.2" unless="jdk1.4.available">
    <path id="extpath">
      <fileset dir="${ext}">
        <include name="*.jar"/>
        <include name="*.JAR"/>
        <include name="*.zip"/>
        <include name="*.ZIP"/>
       </fileset>
    </path>

    <path id="classpath">
      <pathelement path="${classes}" />
      <path refid="extpath" />
    </path>

    <property name="expanded.classpath" refid="classpath"/>
    <echo message="classpath=${expanded.classpath}" level="info"/>

  </target>

  <!-- ==================================================================== -->
  <target name="classpath1.4" if="jdk1.4.available">

    <path id="extpath">
      <fileset dir="${ext}">
        <include name="*.jar"/>
        <include name="*.JAR"/>
        <include name="*.zip"/>
        <include name="*.ZIP"/>
        <exclude name="javax.xml.jaxp.jar"/>
        <exclude name="crimson.jar"/>
       </fileset>
    </path>

    <path id="classpath">
      <pathelement path="${classes1.4}" />
      <pathelement path="${classes}" />
      <path refid="extpath" />
    </path>

    <property name="expanded.classpath" refid="classpath"/>
    <echo message="classpath=${expanded.classpath}" level="info"/>

  </target>
  

  <!-- ==================================================================== -->
  <target name="prepare" depends="classpath">
    <mkdir dir="${test.classes}" />
    <mkdir dir="${test.results}" />
    <available property="junit.task.available" 
               classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" />
    <available property="junit.available" 
               classname="junit.framework.Test" />
  </target>

  <!-- ==================================================================== -->
  <target name="tidy">
    <delete dir="${test.classes}" quiet="true"/>
  </target>

  <!-- ==================================================================== -->
  <target name="clean" depends="tidy">
  </target>

  <!-- ==================================================================== -->
  <target name="classes" depends="prepare">
    <javac srcdir="${test.src}"
           destdir="${test.classes}"
           debug="true"
           optimize="fale"
           deprecation="${javac.deprecation}"
           >
       <classpath>
         <path refid="classpath" />
         <pathelement path="${junit.jar}" />     
       </classpath>
       <include name="**/*.java"/>
    </javac>
  </target>

  <!-- ==================================================================== -->
  <target name="test" depends="junit,testUtil,testXML,testHTTP"/>

  <!-- ==================================================================== -->
  <target name="junit" depends="prepare,check.junit.task,check.junit,classes">
    <echo>
Test results in ${test.results}
    </echo>
    <delete file="${test.results}/*" quiet="true" />
    <junit fork="no" printsummary="yes" haltonerror="yes" haltonfailure="yes" >
      <formatter type="plain" usefile="true" />                  
      <classpath> 
         <path refid="classpath" />
         <pathelement location="${junit.jar}" />     
         <pathelement location="${test.classes}" />     
      </classpath>        
      <batchtest fork="no" todir="${test.results}">
        <fileset dir="${test.src}">
          <include name="**/jetty/Tests.java" />
        </fileset>
      </batchtest>   
    </junit>
  </target>

  <!-- ==================================================================== -->
  <target name="check.junit.task" unless="junit.task.available" >
    <fail message="
 The &lt;junit&gt; task is not available.
 You need to install the Ant optional tasks .jar in the [ant]/lib directory.
 Please see [jetty]/tests/README.html for more information"
   />
  </target>

  <!-- ==================================================================== -->
  <target name="check.junit" unless="junit.available" >
    <fail message="
  The junit .jar is not in the Ant class path.
  You need to place a copy junit.jar in the [ant]/lib directoy.
  Please see [jetty]/tests/README.html for more information" 
    />
  </target>

  <!-- ==================================================================== -->
  <target name="testUtil" depends="classes">
    <java classname="org.mortbay.util.TestHarness"
          fork="yes"
          failonerror="yes"
          >                
        <classpath>  
          <pathelement location="${test.classes}" /> 
          <pathelement location="${classes}" />     
          <path refid="extpath" />   
       </classpath>
     </java>        
  </target>


  <!-- ==================================================================== -->
  <target name="testXML" depends="classes">
    <java classname="org.mortbay.xml.TestHarness"
          fork="yes"
          failonerror="yes">
      <classpath> 
          <pathelement location="${test.classes}" /> 
          <pathelement location="${classes}" />
          <path refid="extpath" />   
      </classpath>
    </java>
  </target>

  <!-- ==================================================================== -->
  <target name="testHTTP" depends="classes">
    <java classname="org.mortbay.http.TestHarness"
          fork="yes"
          failonerror="yes">
      <classpath>
          <pathelement location="${test.classes}" /> 
          <pathelement location="${classes}" />
          <path refid="extpath" />   
      </classpath>
    </java>
  </target>

</project>




