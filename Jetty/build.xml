<!-- 
========================================================================
 Copyright (c) 1999 Mort Bay Consulting (Australia) Pty. Ltd.
 $Id$
======================================================================== 
 This build file specifies how to build Jetty3 using ANT, the 
 build tool from the Apache/Jakarta project. 
  <http://jakarta.apache.org/ant/index.html>
======================================================================== 

The default target is "webapp", which will build and package everything
needed to run Jetty's demo application.

Other targets:

clean       - Remove all generated files.
prepare     - Set up build directory structure.
servlet     - Builds the servlet library.
jasper      - Builds the Jasper JSP engine library.
jetty       - Builds the Jetty library.
libs        - Builds all libraries.
dist        - Constructs a distribution file with all the source.
webapp      - Builds the demo web application.
run.demo    - Runs the demo web application. 
test        - Runs the Jetty test harness.
release     - Cleanup for release

-->
<project name="Jetty3 Web, Servlet, and JSP server" 
  default="webapp" 
  basedir=".">
  
  <property name="app.name"       value="Jetty3" />
  <property name="version"        value="3.0.B05" />
  
  <property name="src.dir"        value="${basedir}/src" />
  <property name="etc"            value="${basedir}/etc"/>
  <property name="webapps"        value="${basedir}/webapps"/>
  <property name="lib"            value="${basedir}/lib"/>
  <property name="classes"        value="${basedir}/classes"/>
  <property name="javadoc"        value="${basedir}/javadoc"/>
  <!-- property name="build.compiler" value="jikes"/ --> 
  
  <property name="jetty.webapp"           value="${webapps}/jetty"/>
  <property name="jetty.war"              value="${webapps}/jetty.war"/>
  <property name="jetty.webapp.webinf"    value="${jetty.webapp}/WEB-INF"/>
  <property name="jetty.webapp.classes"   value="${jetty.webapp.webinf}/classes"/>
  
  <property name="jetty.jar"      value="${lib}/com.mortbay.jetty.jar"/>
  <property name="servlet.jar"    value="${lib}/javax.servlet.jar"/>
  <property name="jasper.jar"     value="${lib}/org.apache.jasper.jar"/>
  <property name="xml.jar"        value="${lib}/com.microstar.xml.jar"/>
  <property name="jsse.jar"       value="${lib}/com.sun.net.ssl.jar"/>
  <property name="libs"           value="${xml.jar};${jsse.jar};${jasper.jar};${servlet.jar};${jetty.jar}"/>
  
  
  <!-- property name="build.compiler" value="classic"/ -->
  
  <target name="prepare">
    <mkdir dir="${jetty.webapp.classes}"/>
    <mkdir dir="${javadoc}" />
    <mkdir dir="${classes}" />
  </target>
  
  <target name="clean">
    <deltree dir="${jetty.webapp.classes}"/>
    <deltree dir="${classes}"/>
    <deltree dir="${javadoc}"/>
    <delete  file="${jetty.jar}"/>
    <delete  file="${servlet.jar}"/>
    <delete  file="${jasper.jar}"/>
  </target>

  
  <target name="check_packages">
    <!-- available property="prop.name" classname="com.some.Class" / -->
  </target>
  
  <target name="servlet" depends="prepare">
    <copydir src="${src.dir}" dest="${classes}">
      <include name="javax/servlet/**/defaultManifest.mf" />
      <include name="javax/servlet/**/*.properties" />
    </copydir>
    <javac srcdir="${src.dir}" 
           destdir="${classes}"
           classpath="${classpath}"
           debug="on" 
           optimize="on" 
           deprecation="off"
           >
      <include name="javax/servlet/**/*.java"/> 
    </javac>
    <jar jarfile="${servlet.jar}"
         basedir="${classes}" 
         >
       <include name="javax/servlet/**" />
    </jar>
  </target>
  
  <target name="jetty.util" depends="servlet">
    <copydir src="${src.dir}" dest="${classes}">
      <include name="com/mortbay/Util/**/defaultManifest.mf" />
      <include name="com/mortbay/Util/**/*.properties" />
      <include name="com/mortbay/Util/**/*.dtd" />
    </copydir>
    <javac srcdir="${src.dir}" 
           destdir="${classes}"
           classpath="${libs}"
           debug="on" 
           optimize="on" 
           deprecation="off"
           >
      <include name="com/mortbay/Util/**/*.java"/> 
    </javac>
  </target>

  <target name="jetty.html" depends="jetty.util">
    <javac srcdir="${src.dir}" 
           destdir="${classes}"
           classpath="${libs}"
           debug="on" 
           optimize="on" 
           deprecation="off"
           >
      <include name="com/mortbay/HTML/**/*.java"/> 
    </javac>
  </target>

 <target name="jetty.http" depends="jetty.util,jetty.html">
    <copydir src="${src.dir}" dest="${classes}">
      <include name="com/mortbay/HTTP/**/defaultManifest.mf" />
      <include name="com/mortbay/HTTP/**/*.dtd" />
      <include name="com/mortbay/HTTP/**/*.properties" />
    </copydir>
    <javac srcdir="${src.dir}" 
           destdir="${classes}"
           classpath="${libs}"
           debug="on" 
           optimize="on" 
           deprecation="off"
           >
      <include name="com/mortbay/HTTP/**/*.java"/> 
    </javac>
  </target>

 <target name="jetty.server" depends="jetty.http">
    <javac srcdir="${src.dir}" 
           destdir="${classes}"
           classpath="${libs}"
           debug="on" 
           optimize="on" 
           deprecation="off"
           >
      <include name="com/mortbay/Jetty/Server.java"/> 
      <include name="com/mortbay/Jetty/Demo.java"/> 
    </javac>
  </target>

 <target name="jetty.servlets" depends="jetty.http">
    <javac srcdir="${src.dir}" 
           destdir="${classes}"
           classpath="${libs}"
           debug="on" 
           optimize="on" 
           deprecation="off"
           >
      <include name="com/mortbay/Servlet/**/*.java"/> 
    </javac>
  </target>

  <target name="jetty" 
          depends="jetty.util,jetty.html,jetty.http,jetty.server,jetty.servlets">
    <jar jarfile="${jetty.jar}"
         basedir="${classes}" 
    >
       <include name="com/mortbay/**"  />      
       <exclude name="com/mortbay/**/TestHarness*.class" />
       <exclude name="com/mortbay/Util/DataClass/*" />
       <exclude name="com/mortbay/Util/TestConfiguration.class" />
       <exclude name="com/mortbay/Util/PropertyTreeTest.class" />
       <exclude name="com/mortbay/Util/DictionaryConverterTest*.class" />
       <exclude name="com/mortbay/HTTP/TestRFC*.class" />
       <exclude name="com/mortbay/HTTP/TestRequest.class" />
       <exclude name="com/mortbay/HTTP/Http10TestClient.class" />
       <exclude name="com/mortbay/HTTP/Handler/TestTEHandler.class" />
       <exclude name="com/mortbay/HTML/TestHtml.class" />
    </jar>
  </target>
  
  <target name="jasper" depends="prepare">
    <copydir src="${src.dir}" dest="${classes}">
      <include name="org/apache/jasper/**/defaultManifest.mf" />
      <include name="org/apache/jasper/**/*.properties" />
    </copydir>
    <javac srcdir="${src.dir}" 
           destdir="${classes}"
           classpath="${classpath}"
           debug="on" 
           optimize="on" 
           deprecation="off"
           >
      <include name="org/apache/jasper/**/*.java"/> 
    </javac>
    <jar jarfile="${jasper.jar}"
         basedir="${classes}" 
         >
       <include name="org/apache/jasper/**"  />
    </jar>
  </target>
 
  <target name="libs" depends="servlet,jetty,jasper">
  </target>

  <target name="webapp" depends="libs">
    <copydir src="${src.dir}" dest="${jetty.webapp.classes}">
      <include name="com/mortbay/Jetty/defaultManifest.mf" />
      <include name="com/mortbay/Jetty/*.properties" />
    </copydir>
    <javac srcdir="${src.dir}" 
           destdir="${jetty.webapp.classes}"
           classpath="${jetty.jar};${servlet.jar}"
           debug="on" 
           optimize="on" 
           deprecation="off" 
           >
      <include name="com/mortbay/Jetty/JettyPage.java" />
      <include name="com/mortbay/Jetty/JettyServlet.java" />
    </javac>
    <copyfile src="LICENSE.html" dest="${jetty.webapp}/LICENSE.html" />
    <jar jarfile="${jetty.war}"
         basedir="${jetty.webapp}" 
         >
    </jar>
  </target>
  
  <target name="javadoc" depends="libs" >
    <mkdir dir="${javadoc}"/>
    <javadoc packagenames="com.mortbay.*,com.mortbay.*.*,com.mortbay.*.*.*,javax.servlet.*,javax.servlet.*.*,org.apache.jasper.*,org.apache.jasper.*.*"
             sourcepath="${src.dir}"
             destdir="${javadoc}"
             classpath="${xml.jar};${jsse.jar}"
             verbose="no"
             protected="yes"
             author="true"
             version="true"
             windowtitle="${app.name} API"
             doctitle="${app.name}"
             bottom="Copyright &#169; 2000 Mortbay Consulting Pty. Ltd. All Rights Reserved."
             >
       <group title="Servlet API" packages="javax.*" />
       <group title="Jetty" packages="com.mortbay.*" />
       <group title="Jasper Servlet Engine" packages="org.apache.*" />
       <link offline="true" 
             href="http://java.sun.com/products/jdk/1.2/docs/api/" 
             packagelistLoc="${etc}"/>
    </javadoc>
  </target>

  <target name="test" depends="jetty">
    <property name="classpath" value="${jetty.jar};${servlet.jar}" />
    <java classname="com.mortbay.Util.TestHarness"
          classpath="${classes};${xml.jar}"
          fork="yes"
          failonerror="yes" 
          />
    <java classname="com.mortbay.HTTP.TestHarness"
          classpath="${classes};${xml.jar}"
          fork="yes"
          failonerror="yes" 
          />
  </target>
  
  <target name="all" depends="prepare,libs,webapp,javadoc,test"/>
  
  <target name="demo" depends="webapp" >
    <java classname="com.mortbay.Jetty.Server"
          args="${etc}/demo.xml"
          classpath="${libs}"
          fork="yes"
          failonerror="yes" 
          />
  </target>
  
  <target name="dist" depends="all" >
    <property name="tarfile" value="Jetty-${version}.tar" />    
    <delete  file="${tarfile}"/>
    <tar tarfile="${tarfile}"
         basedir="${basedir}">
         <exclude name="**/CVS/*" />
         <exclude name="classes/**/*" />
    </tar>
    <delete  file="${tarfile}.gz"/>
    <gzip zipfile="${tarfile}.gz" src="${tarfile}" />
    <delete  file="${tarfile}"/>
  </target>

</project>











