<!--
========================================================================
 Copyright (c) 1999 Mort Bay Consulting (Australia) Pty. Ltd.
 $Id$
========================================================================
 This build file specifies how to build Jetty using ant, the
 java build tool from the Apache/Jakarta project.
  <http://jakarta.apache.org/ant/index.html>
========================================================================

The default target is "webapps", which will build and package everything
needed to run Jetty's demo application.

Other targets:

  clean         - Remove all generated files.
  prepare       - Set up build directory structure.
  servlet.jar   - Buils the servlet library.
  jasper.jar    - Builds the Jasper JSP engine library.
  jetty.jar     - Builds the Jetty library.
  jars          - Builds the above three libraries.
  dist          - Constructs a distribution file with all the source.
  webapps       - Builds the demo web application.
  javadoc       - Builds the API documentation.
  demo          - Runs the demo web application.
  run           - Runs the jetty.xml configuration.
  test          - Runs the Jetty test harnesses.
  all           - Almost everything.
  mini.http.jar - Build a minimal HTTP server jar.

-->
<project name="Jetty HTTP Server" default="webapps" basedir=".">
  <property environment="env"/>
  <property name="src"            value="${basedir}/src" />
  <property name="etc"            value="${basedir}/etc" />
  <property name="lib"            value="${basedir}/lib"/>
  <property name="classes"        value="${basedir}/classes"/>
  <property name="javadoc"        value="${basedir}/javadoc"/>
  <property name="logs"           value="${basedir}/logs"/>
  <property name="webapps"        value="${basedir}/webapps"/>
  <property name="demo.webapps"   value="${basedir}/demo/webapps"/>
  <property name="demo.src"       value="${basedir}/demo/src"/>
  <property name="test"           value="${basedir}/test"/>
  <property name="test.lib"       value="${test}/lib"/>
  <property name="test.src"       value="${test}/src"/>
  <property name="test.classes"   value="${test}/classes" />
  <property name="extra"          value="${basedir}/extra" />
  <property name="build.compiler" value="jikes"/>
  <!-- property name="build.compiler" value="classic"/ -->
  <!-- property name="build.compiler" value="modern" / -->

  <property name="javac.debug"             value="on" />
  <property name="javac.optimize"          value="off" />
  <property name="javac.deprecation"       value="off" />

  <property name="jetty.home"             value="${basedir}" />
  <property name="jetty.webapp"           value="${demo.webapps}/jetty"/>
  <property name="jetty.war"              value="${demo.webapps}/jetty.war"/>
  <property name="jetty.webapp.webinf"    value="${jetty.webapp}/WEB-INF"/>
  <property name="jetty.webapp.classes"   value="${jetty.webapp.webinf}/classes"/>

  <property name="jetty.jar"      value="${lib}/org.mortbay.jetty.jar"/>
  <property name="mini.http.jar"  value="${basedir}/org.mortbay.http.jar"/>
  <property name="servlet.jar"    value="${lib}/javax.servlet.jar"/>
  <property name="jasper.jar"     value="${lib}/org.apache.jasper.jar"/>
  <property name="jaxp.jar"       value="${lib}/javax.xml.jaxp.jar"/>
  <property name="xml.jar"        value="${lib}/org.apache.crimson.jar"/>
  <property name="jsse.jar"       value="${lib}/com.sun.net.ssl.jar"/>
  <property name="junit.jar"      value="${test.lib}/junit-3.7.jar"/>

  <path id="external.classpath">
    <pathelement path="${jsse.jar}" />
    <pathelement path="${jaxp.jar}" />
    <pathelement path="${xml.jar}" />
  </path>

  <path id="classpath">
    <pathelement path="${jetty.jar}" />
    <pathelement path="${jasper.jar}" />
    <pathelement path="${servlet.jar}" />
    <path refid="external.classpath" />
  </path>


  <!-- ==================================================================== -->
  <target name="prepare">
    <mkdir dir="${jetty.webapp.classes}"/>
    <mkdir dir="${javadoc}" />
    <mkdir dir="${classes}" />
    <mkdir dir="${logs}" />
    <mkdir dir="${etc}/dtd" />
    <copy file="${src}/org/mortbay/xml/configure_1_0.dtd" tofile="${etc}/dtd/configure_1_0.dtd" />
    <copy file="${src}/org/mortbay/xml/configure_1_1.dtd" tofile="${etc}/dtd/configure_1_1.dtd" />
    <copy file="${src}/org/mortbay/xml/configure_1_2.dtd" tofile="${etc}/dtd/configure_1_2.dtd" />
    <copy file="${src}/org/mortbay/xml/configure_1_2.dtd" tofile="${etc}/dtd/configure.dtd" />
    <copy file="${src}/javax/servlet/resources/web-app_2_2.dtd" tofile="${etc}/dtd/web-app_2_2.dtd" />
    <copy file="${src}/javax/servlet/resources/web-app_2_3.dtd" tofile="${etc}/dtd/web-app_2_3.dtd" />
    <copy file="${src}/javax/servlet/resources/web-app_2_3.dtd" tofile="${etc}/dtd/web.dtd" />
    <copy todir="${demo.webapps}/root">
      <fileset dir="${etc}/dtd">
        <include name="*.dtd"/>
      </fileset>
    </copy>
    <available property="extra.available" 
            file="${extra}" />
  </target>

  <!-- ==================================================================== -->
  <target name="tidy" depends="tidy.jetty,tidy.extra" 
     description="Remove generated files not needed for running"
   />
  
  <target name="tidy.jetty">
    <delete dir="${classes}" quiet="true"/>
    <delete dir="${test.classes}" quiet="true"/>
    <delete file="${mini.http.jar}" quiet="true"/>
    <ant antfile="${test}/build.xml" inheritAll="true" target="tidy"/>
  </target>
  
  <target name="tidy.extra" if="extra.available" >
    <ant antfile="${extra}/build.xml" inheritAll="true" target="tidy" />
  </target>


  <!-- ==================================================================== -->
  <target name="clean" depends="tidy,clean.jetty,clean.extra"
     description="Remove generated files"
    />
        
  <target name="clean.jetty" depends="tidy.jetty">
    <delete dir="${jetty.webapp.classes}" quiet="true"/>
    <delete dir="${javadoc}" quiet="true"/>
    <delete dir="${etc}/dtd" quiet="true"/>
    <delete file="${jetty.jar}" quiet="true"/>
    <delete file="${servlet.jar}" quiet="true"/>
    <delete file="${jasper.jar}" quiet="true"/>
    <delete quiet="true">
      <fileset dir="${demo.webapps}/examples">
        <include name="**/*.class"/>
      </fileset>
    </delete>
    <delete quiet="true">
      <fileset dir="${demo.webapps}/root">
        <include name="*.dtd"/>
      </fileset>
    </delete>
    <ant antfile="${test}/build.xml" inheritAll="true" target="clean"/>
  </target>


  <target name="clean.extra" depends="tidy.extra" if="extra.available" >
    <ant basedir="${extra}" target="clean"/>
  </target>


  <!-- ==================================================================== -->
  <target name="classes" depends="prepare"
   description="Compile the java classes" >
    <copy todir="${classes}">
      <fileset dir="${src}">
        <include name="**/defaultManifest.mf" />
        <include name="**/*.properties" />
        <include name="**/*.dtd" />
      </fileset>
    </copy>
    <javac srcdir="${src}"
           destdir="${classes}"
           debug="${javac.debug}"
           optimize="${javac.optimize}"
           deprecation="${javac.deprecation}"
           >
       <classpath refid="classpath" />
       <include name="**/*.java"/>
    </javac>
  </target>

  <!-- ==================================================================== -->
  <target name="servlet.jar" depends="classes">
    <jar jarfile="${servlet.jar}" basedir="${classes}" >
       <include name="javax/servlet/**" />
    </jar>
  </target>

  <!-- ==================================================================== -->
  <target name="jetty.jar" depends="classes,servlet.jar">
    <delete file="${mini.http.jar}" quiet="true"/>
    <jar jarfile="${jetty.jar}" basedir="${classes}" manifest="${src}/org/mortbay/MANIFEST.MF" >
       <include name="org/mortbay/**"  />
    </jar>
  </target>

  <!-- ==================================================================== -->
  <target name="mini.http.jar" depends="classes,servlet.jar">
    <delete file="${jetty.jar}" quiet="true"/>
    <delete file="${servlet.jar}" quiet="true"/>
    <delete file="${jasper.jar}" quiet="true"/>
    <jar jarfile="${mini.http.jar}" basedir="${classes}" manifest="${src}/org/mortbay/MANIFEST.MF" compress="true">
       <include name="org/mortbay/util/**" />
       <include name="org/mortbay/http/**" />
       <include name="javax/servlet/http/Cookie.class" />
       <include name="javax/servlet/http/LocalStrings*.properties" />
       <exclude name="org/mortbay/http/JsseListener.class" />
       <exclude name="org/mortbay/http/SunJsseListener.class" />
       <exclude name="org/mortbay/util/Converter" />
       <exclude name="org/mortbay/util/KeyPairTool.class" />
    </jar>
  </target>


  <!-- ==================================================================== -->
  <target name="jasper.jar" depends="classes">
    <jar jarfile="${jasper.jar}"
         basedir="${classes}"  >
       <include name="org/apache/jasper/**"  />
    </jar>
  </target>

  <!-- ==================================================================== -->
  <target name="jars" depends="servlet.jar,jetty.jar,jasper.jar"
   description="Build the jar files" >
  </target>

  <!-- ==================================================================== -->
  <target name="webapps" depends="webapp.jetty,webapp.examples"
   description="Build the demonstration webapplications"
   >
    <copy file="${demo.webapps}/jetty/images/jetty_banner.gif" tofile="${webapps}/root/jetty_banner.gif" />
  </target>

  <!-- ==================================================================== -->
  <target name="webapp.jetty" depends="jars">
    <copy todir="${jetty.webapp.classes}">
      <fileset dir="${demo.src}">
        <include name="**/defaultManifest.mf" />
        <include name="**/*.properties" />
      </fileset>
    </copy>
    <copy file="${jetty.webapp.classes}/org/mortbay/webapps/jetty/JettyIndex.properties"
        tofile="${jetty.webapp.classes}/org/mortbay/webapps/jetty/JettyIndex_en.properties" />
    <javac srcdir="${demo.src}"
           destdir="${jetty.webapp.classes}"
           debug="${javac.debug}"
           optimize="${javac.optimize}"
           deprecation="${javac.deprecation}"
           >
      <classpath>
        <pathelement path="${servlet.jar}" />
        <pathelement path="${jetty.jar}"   />
      </classpath>
      <include name="**/*.java" />
    </javac>

    <copy file="LICENSE.html" tofile="${jetty.webapp}/LICENSE.html" />
    <copy file="VERSION.TXT" tofile="${jetty.webapp}/versions.txt" />
    <!-- jar jarfile="${jetty.war}" basedir="${jetty.webapp}"/ -->
  </target>

  <!-- ==================================================================== -->
  <target name="webapp.examples" depends="jars">
    <javac srcdir="${demo.webapps}/examples/WEB-INF/classes"
           destdir="${demo.webapps}/examples/WEB-INF/classes"
           debug="${javac.debug}"
           optimize="${javac.optimize}"
           deprecation="${javac.deprecation}"
           >
      <classpath>
        <pathelement path="${servlet.jar}" />
        <pathelement path="${jetty.jar}"   />
      </classpath>
      <include name="**/*.java" />
    </javac>
    <javac srcdir="${demo.webapps}/examples/jsp/plugin/applet"
           destdir="${demo.webapps}/examples/jsp/plugin/applet"
           debug="${javac.debug}"
           optimize="${javac.optimize}"
           deprecation="${javac.deprecation}"
           >
      <classpath>
        <pathelement path="${servlet.jar}" />
        <pathelement path="${jetty.jar}"   />
      </classpath>
      <include name="**/*.java" />
    </javac>
  </target>


  <!-- ==================================================================== -->
  <target name="javadoc" depends="jars"
   description="Build the javadoc">
    <mkdir dir="${javadoc}"/>
    <javadoc packagenames="org.mortbay.*,javax.servlet.*,org.apache.jasper.*"
             sourcepath="${src}"
             destdir="${javadoc}"
             author="true"
             version="true"
             public="true"
             windowtitle="${ant.project.name} API"
             doctitle="${ant.project.name}"
             bottom="Copyright &#169; 2000 Mortbay Consulting Pty. Ltd. All Rights Reserved.">
       <classpath refid="classpath" />
    </javadoc>
  </target>

  <!-- ==================================================================== -->
  <target name="test" depends="jars"
   description="Build and run the test harnesses">
    <ant antfile="${test}/build.xml" inheritAll="true" target="test"/>
  </target>

  <!-- ==================================================================== -->
  <target name="all" depends="prepare,jars,webapps,javadoc,test,extra"
   description="Build everything"/>

  <target name="extra" depends="prepare"  if="extra.available" >
    <ant dir="${extra}" inheritAll="false" target="all" />
  </target>

  <!-- ==================================================================== -->
  <target name="demo" depends="webapps" 
   description="Build and run the demo">
    <java classname="org.mortbay.jetty.Server"
          dir="${jetty.home}"
          fork="yes"
          failonerror="yes"
          >
       <classpath>
         <pathelement path="${env.CLASSPATH}" />
         <path refid="classpath" />
       </classpath>
       <jvmarg line="-Djetty.home=${jetty.home} -Djetty.log=${jetty.home}/logs" />
       <arg line="${etc}/admin.xml ${etc}/demo.xml" />
    </java>
  </target>

  <!-- ==================================================================== -->
  <target name="run" depends="jars"
   description="Run the default configuration">
    <java classname="org.mortbay.jetty.Server"
          dir="${jetty.home}"
          fork="yes"
          failonerror="yes"
          >
       <classpath>
         <pathelement path="${env.CLASSPATH}" />
         <path refid="classpath" />
       </classpath>
       <jvmarg line="-Djetty.home=${jetty.home} -Djetty.log=${jetty.home}/logs" />
       <arg line="${etc}/admin.xml ${etc}/jetty.xml" />
    </java>
  </target>

  <!-- ==================================================================== -->
  <target name="watchdog" depends="jars"
   description="Run the watchdog configuration">
    <java classname="org.mortbay.jetty.Server"
          dir="${jetty.home}"
          fork="yes"
          failonerror="yes"
          >
       <classpath>
         <pathelement path="${env.CLASSPATH}" />
         <path refid="classpath" />
       </classpath>
       <jvmarg line="-Djetty.home=${jetty.home} -Djetty.log=${jetty.home}/logs" />
       <arg line="${etc}/admin.xml ${etc}/watchdog.xml" />
    </java>
  </target>


</project>







