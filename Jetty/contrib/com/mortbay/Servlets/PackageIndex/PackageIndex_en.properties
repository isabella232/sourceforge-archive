#
# Note: in the following entries, paths, ignore, and doco type paths can all
# have multiple values, seperated by ",", ";" or ":"
#

# Whether or not to have the links to the doco be file: links (assuming the
# clients can see the same files the server can, or links back to the
# webserver. If it is back to the webserver, the operator will need to
# configure a FileHandler to serve the files correclty.
mapToFile:			false
httpIndexPrefix:

# Border width of tables. Sometimes, with many versions or long names,
# invisible tables are not helpful.
tocTableBorderWidth:		4

# Sections
# This describes the different type of doco the servlet will catalogue. These
# are fairly arbitrary. At least 1 is required. The name of the section
# (eg. jd) is used to indicate the paths to search for under the
# individual package specifications later. The value here is the display name
# used on the pages for that type of documentation.
sections.jd:		Javadoc
sections.ref:		Mauals

# Package Specs.
# Each package spec can have the following fields:
#   paths: (required) Where to look for the package. The directory with the
# name of the package will be searched for under this directory.
#   versioning: The number of intermediate directories underneath the package
# directory before doco should be searched for. This is to handle where a
# package will have an arbitrary number of directories under itself for
# multiple versions of the package. E.g. In package jdk, in /usr/local (where
# paths=/usr/local) there may be sol2/1.2.2 and linux/1.2.2, thus versioning
# should be set to 2. The servlet assumes that the last directory is the
# major version directory (i.e the above is assumed, rather than 1.2.2/linux
# and 1.2.2/sol2). If set to 0, it is assumed there is only 1 installation.
#   description: The display name describing the package (don't make it too
# long, it clutters the display)
#   ignore: "versioning" intermediary directories that should be ignored and
# passed over. Use this to handle cases where you may have symlinks pointing
# to the one version but only want it to show up under 1 name.
# 
# In addition, packages must specify the path(s) to search for documents of
# the type(s) specified in "sections" above; Not all sections need to be
# specified, but at least 1 is a good idea, otherwise the package will have
# no doco links. E.g. If you specified "sections.adoc: Doc Type A" then
# packages with doco of that type should have a field called "adoc" with the
# path to the Doc Type A file or directory (within a single version). Since
# different versions of a package might have different paths to their
# documentation, you can specify a list of paths. Since many packages will
# have similar paths, versioning, and doc paths, it is a good idea to use
# defaults such as pkgs.*.paths. Don't use defaults like "*.paths" or paths
# will show up as a doco type section!

# defaults
pkgs.*.paths:			/usr/local/java/packages/:/projects/edt/
pkgs.*.versioning:		1
pkgs.*.jd:			docs/api/index.html:doc/api/index.html:javadoc/index.html:api/index.html
pkgs.*.ref:			docs/index.html:index.html:doc/index.html
pkgs.*.ignore:			current:CURRENT:DEFAULT:default:src:classes

#
# packages
#
# /usr/local/java/packages/$PKG/$VERSION
#

pkgs.jdk.description:		Jdk

pkgs.OROMatcher.description:	OROMatcher
pkgs.OROMatcher.jd:		doc/api/Package-com.oroinc.text.regex.html

pkgs.cocoon.description:	Apache XML

pkgs.ConfigManager.description: ConfigManager

pkgs.javaclass.desciption:      JavaClass
pkgs.javaclass.jd:              docs/index.html
pkgs.javaclass.ref:             

pkgs.jConnect.description:      Sybase JDBC driver

pkgs.j2sdkee.description:       J2EE

pkgs.Jetty.description:		Jetty
pkgs.Jetty.ref:			README.txt:index.html

pkgs.beans.description:         Beans API
pkgs.beans.jd:                  doc/javadoc/packages.html
pkgs.beans.ref:                 doc/apis.html
pkgs.beans.versioning:          0

pkgs.weblogic.description:      WebLogic


pkgs.jasmin.description:	Jasmin
pkgs.jasmin.jd:                 doc/api/Package-jasmin.html
pkgs.java_cup.description:	Java Cup
pkgs.javachart.description:	JavaChart
pkgs.jaxp.description:          Jaxp
pkgs.jlex.description:          JLex
pkgs.mqm.description:           MQM
pkgs.oracle-jdbc.description:	Oracel JDBC
pkgs.pja.description:           PJA
pkgs.pushlet.description:	Pushlet
pkgs.rv.description:            RV
pkgs.servletapi.description:	Servlet API
pkgs.ssljava.description:	Reuters SSL Java
pkgs.jaas.description:		JAAS
pkgs.jaasmod.description:	JAAS Modules
pkgs.JBoss.description:		JBoss
pkgs.javamail.description:	JavaMail
pkgs.enhydra.description:	Enhydra
pkgs.cryptix.description:	Cryptix JCE
pkgs.jakarta-ant.description:   Jakarta Ant
pkgs.jakarta-oro.description:   Jakarta OROMatcher

# /projects/edt stuff
pkgs.SSMB-Utils.description:	SSB Utils
pkgs.MarketInfo.description:	MarketInfo
pkgs.SeatsOI.description:	SeatsOI
pkgs.Feeds.description:		SSMB Feeds Infras
pkgs.WebServices.description:	Shared Web Services
pkgs.IBES.description:		IBES
pkgs.ImpVol.description:	Implied Volatility Project
pkgs.bog.description:		Back Office Gateway
pkgs.ecif.description:		E-Commerce Infrastructure
