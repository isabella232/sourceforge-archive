<!--
========================================================================
 Copyright (c) 2003 Mort Bay Consulting (Australia) Pty. Ltd.
 $Id$
========================================================================
========================================================================

The default target is "all", which will build everything.

Other targets:

  clean              - Remove all generated files.
  prepare            - Set up build directory structure.
  run.jaas.webapp    - run the JAAS demo webapp

-->

<project name="JettyPlus" default="all" basedir=".">


  <!-- ==================================================================== -->
  <property name="build.compiler"            value="modern" />
  <property name="build.compiler.emacs"      value="true" />
  <property name="build.compiler.fulldepend" value="false" />
  <property name="build.compiler.pedantic"   value="false" />
  <property name="javac.debug"               value="on" />
  <property name="javac.optimize"            value="off" />
  <property name="javac.deprecation"         value="off" />

  <!-- ==================================================================== -->
  <property environment="env"/>
  <property name="plus"           value="${basedir}"/>
  <property name="extra"          value="${basedir}/.."/>
  <property name="src"            value="${plus}/src" />
  <property name="etc"            value="${extra}/etc" />
  <property name="lib"            value="${extra}/lib"/>
  <property name="ext"            value="${extra}/ext"/>
  <property name="logs"            value="${extra}/logs"/>
  <property name="classes"        value="${plus}/classes"/>
  <property name="javadoc"        value="${extra}/javadoc"/>
  <property name="demo.webapps"   value="${plus}/demo/webapps"/>
  <property name="demo.src"       value="${plus}/demo/src"/>
  <property name="test"           value="${plus}/test"/>
  <property name="jetty.home"     value="${extra}/.." />
  <property name="jetty.lib"      value="${jetty.home}/lib"/>
  <property name="jetty.etc"      value="${jetty.home}/etc"/>
  <property name="jetty.ext"      value="${jetty.home}/ext"/>
  <property name="jetty1.2.jar"   value="${jetty.lib}/org.mortbay.jetty-jdk1.2.jar"/>
  <property name="jetty1.4.jar"   value="${jetty.lib}/org.mortbay.jetty.jar"/>
  <property name="servlet.jar"    value="${jetty.lib}/javax.servlet.jar"/>
  <property name="mortbay.jmx.jar" value="${jetty.lib}/org.mortbay.jmx.jar"/>
  <property name="jasper-runtime.jar"     value="${ext}/jasper-runtime.jar"/>
  <property name="jasper-compiler.jar"    value="${ext}/jasper-compiler.jar"/>
  <property name="jaas.webapp"           value="${demo.webapps}/jaas"/>
  <property name="jaas.webapp.webinf"    value="${jaas.webapp}/WEB-INF"/>
  <property name="jaas.webapp.classes"   value="${jaas.webapp.webinf}/classes"/>
  <property name="jaas.jar"              value="${lib}/jaas.jar"/>
  <property name="jettyplus.jar"         value="${lib}/jettyplus.jar"/>
  <property name="policy.file"           value="${etc}/jaas.policy"/>



  <!-- ==================================================================== -->
  <!-- javadoc                                                              -->
  <!-- ==================================================================== -->
  <target name="javadoc" depends="jars"
   description="Build the javadoc">
    <mkdir dir="${javadoc}"/>
    <javadoc packagenames="org.mortbay.*"
             sourcepath="${src}"
             destdir="${javadoc}"
             author="true"
             version="true"
             public="true"
             windowtitle="${ant.project.name} API"
             doctitle="${ant.project.name}"
             bottom="Copyright &#169; 2003 Mortbay Consulting Pty. Ltd. All Rights Reserved.">
       <classpath refid="classpath" />
    </javadoc>
  </target>

  <!-- ==================================================================== -->
  <!-- Classpath                                                            -->
  <!-- ==================================================================== -->
  <target name="classpath" depends="is.jdk1.4.available,classpath1.2,classpath1.4"/>

  <target name="is.jdk1.4.available">
    <available property="jdk1.4.available" classname="java.util.logging.Handler" />
    <echo message="JDK1.4 available=${jdk1.4.available}" level="info"/>
  </target>


  <!-- ==================================================================== -->
  <!--  Classpath1.2                                                        -->
  <!-- ==================================================================== -->
  <target name="classpath1.2" unless="jdk1.4.available">
    <path id="extpath">
      <fileset dir="${ext}">
        <include name="*.jar"/>
        <include name="*.JAR"/>
        <include name="*.zip"/>
        <include name="*.ZIP"/>
       </fileset>
       <fileset dir="${jetty.ext}">
        <include name="*.jar"/>
        <include name="*.JAR"/>
        <include name="*.zip"/>
        <include name="*.ZIP"/>
       </fileset>
    </path>
    <path id="classpath">
      <pathelement location="${jetty1.2.jar}" />
      <pathelement location="${servlet.jar}" />
      <path refid="extpath" />
    </path>
    <property name="expanded.classpath" refid="classpath"/>
    <echo message="classpath=${expanded.classpath}" level="info"/>
  </target>

  <!-- ==================================================================== -->
  <!-- Classpath1.4                                                         -->
  <!-- ==================================================================== -->
  <target name="classpath1.4" if="jdk1.4.available">
    <path id="extpath">
      <fileset dir="${ext}">
        <include name="*.jar"/>
        <include name="*.JAR"/>
        <include name="*.zip"/>
        <include name="*.ZIP"/>
       </fileset>
       <fileset dir="${jetty.ext}">
        <include name="*.jar"/>
        <include name="*.JAR"/>
        <include name="*.zip"/>
        <include name="*.ZIP"/>
       </fileset>
    </path>

    <path id="classpath">
      <pathelement location="${jetty1.4.jar}" />
      <pathelement location="${servlet.jar}" />
      <path refid="extpath" />
    </path>
    <property name="expanded.classpath" refid="classpath"/>
    <echo message="classpath=${expanded.classpath}" level="info"/>
  </target>


  <!-- ==================================================================== -->
  <!-- Prepare                                                              -->
  <!-- ==================================================================== -->
  <target name="prepare" depends="classpath" description="Make build directories">
    <mkdir dir="${javadoc}" />
    <mkdir dir="${classes}" />
    <mkdir dir="${lib}" />
    <mkdir dir="${logs}" />
  </target>


  <!-- ==================================================================== -->
  <!-- Tidy                                                                 -->
  <!-- ==================================================================== -->
  <target name="tidy" description="Remove classes">
    <delete dir="${classes}" quiet="true"/>
    <delete includeEmptyDirs="true">
      <fileset dir="${demo.webapps}" includes="**/classes/**"/>
    </delete>
    <ant antfile="${test}/build.xml" inheritAll="false" target="tidy"/>
  </target>


  <!-- ==================================================================== -->
  <!-- Clean                                                                -->
  <!-- ==================================================================== -->
  <target name="clean" depends="tidy"
     description="Remove generated files">
    <delete quiet="true">
      <fileset dir="${logs}">
        <include name="**/*.log"/>
      </fileset>
    </delete>
    <ant antfile="${test}/build.xml" inheritAll="false" target="clean"/>
  </target>


  <!-- ==================================================================== -->
  <!-- Classes                                                              -->
  <!-- ==================================================================== -->
  <target name="classes" depends="prepare" description="Compile classes">
    <javac srcdir="${src}"
           destdir="${classes}"
           debug="true"
           optimize="fale"
           deprecation="${javac.deprecation}">
       <classpath>
         <path refid="classpath"/>
       </classpath>
       <include name="**/*.java"/>
    </javac>
  </target>


  <!-- ==================================================================== -->
  <!-- jars                                                                 -->
  <!-- ==================================================================== -->
  <target name="jars" 
          depends="classes, build.jettyplus.jar, build.jaas.jar" 
	  description="Make jettyplus.jar and jaas.jar">
  </target>


  <!-- ==================================================================== -->
  <!-- build.plus.jar                                                       -->
  <!-- ==================================================================== -->
  <target name="check.jettyplus.available" depends="classes">
    <property name="jettyplus.available" value=""/>
    <echo message="jettyplus available:${jettyplus.available}"/>
  </target>

  <target name="build.jettyplus.jar" 
          depends="classes, check.jettyplus.available" if="jettyplus.available" 
          description="Make the JettyPlus jar file">
    <jar basedir="${classes}" 
         destfile="${lib}/jettyplus.jar"
	 excludes="**/jaas/**">
    </jar>
  </target>


  <!-- ==================================================================== -->
  <!-- build.jaas.jar                                                       -->
  <!-- ==================================================================== -->
  <target name="check.jaas.available" depends="classes">
    <available property="jaas.available" file="${src}/org/mortbay/jaas/JAASPrincipal.java"/>
    <echo message="jaas available:${jaas.available}"/>
  </target>

  <target name="build.jaas.jar" 
          depends="classes, check.jaas.available" 
	  if="jaas.available"
	  description="Make the jaas jar file">
    <jar basedir="${classes}"
         destfile="${lib}/jaas.jar"
	 includes="**/jaas/**">
    </jar>
  </target>


  <!-- ==================================================================== -->
  <!-- build.webapp.jaas                                                    -->
  <!-- ==================================================================== -->
  <target name="check.jaas.demo.available" >
    <available property="jaas.demo.available" file="${demo.src}/org/mortbay/webapps/jaas"/>
    <echo message="JAAS demo available: ${jaas.demo.available}"/>
  </target>

  <target name="build.jaas.webapp" 
          depends="jars, check.jaas.demo.available" 
	  if="jaas.demo.available" 
	  description="JAAS demo webapp">
    <mkdir dir="${jaas.webapp.classes}"/>
    <javac srcdir="${demo.src}"
           destdir="${jaas.webapp.classes}"
           debug="${javac.debug}"
           optimize="${javac.optimize}"
           deprecation="${javac.deprecation}">
      <classpath>
        <path refid="classpath" />
	<pathelement location="${jaas.jar}"/>
      </classpath>
      <include name="**/jaas/**.java" />
    </javac>
  </target>




  <!-- ==================================================================== -->
  <!-- webapp-security-prep                                                 -->
  <!-- ==================================================================== -->
  <target name="webapp-security-prep">
    <available property="policy.file.available" file="${policy.file}"/>
    <available property="login.conf.available" file="${etc}/login.conf"/>
  </target>



  <!-- ==================================================================== -->
  <!--  jdk-prep                                                            -->
  <!-- ==================================================================== -->
  <target name="check.jdk.env" unless="${jdk.home}">
    <property name="jdk.home" value="${env.JDK_HOME}"/>
  </target>
  <target name="check.java.env" unless="${jdk.home}">
    <property name="jdk.home" value="${env.JAVA_HOME}"/>
  </target>
  <target name="jdk-prep" depends="check.jdk.env, check.java.env" description="Check if JDK has been set">
    <echo message="jdk.home=${jdk.home}"/>
  </target>


  <!-- ==================================================================== -->
  <!-- JAAS demo webapp                                                     -->
  <!-- ==================================================================== -->
  <target name="run.jaas.demo" depends="jdk-prep, webapp-security-prep, build.jaas.webapp" if="jaas.demo.available">
     <fail message="Set up a test.policy file in ${policy.file}" unless="policy.file.available"/>
     <fail message="Set up a login config file in ${etc}/login.conf" unless="login.conf.available"/>
     <fail message="-Djdk.home not set" unless="jdk.home"/>
     <fail message="-Djetty.home not set" unless="jetty.home"/>
     <dirname property="install.dir" file="${ant.file}"/>
     <echo message="install.dir=${install.dir}"/>
     <echo message="dbUserName=sa"/>
     <echo message="dbPassword="/>
     <echo message="dbDriver=org.hsqldb.jdbcDriver"/>
     <echo message="dbUrl=jdbc:hsqldb:."/>
     <echo message="login config=${etc}/login.conf"/>
     <copy file="${install.dir}/demo/webapps/jaas/WEB-INF/template.xml"
           tofile="${install.dir}/demo/webapps/jaas/WEB-INF/web.xml"
	   overwrite="true"/>
     <replace file="${install.dir}/demo/webapps/jaas/WEB-INF/web.xml" 
              token="@dbDriver" value="org.hsqldb.jdbcDriver"/>
     <replace file="${install.dir}/demo/webapps/jaas/WEB-INF/web.xml" 
              token="@dbUrl" value="jdbc:hsqldb:."/>
     <replace file="${install.dir}/demo/webapps/jaas/WEB-INF/web.xml" 
              token="@dbUserName" value="sa"/>
     <replace file="${install.dir}/demo/webapps/jaas/WEB-INF/web.xml" 
              token="@dbPassword" value=""/>
<!--
     <java fork="true" jar="${start.jar.dir}/start.jar" dir="${jetty.home}"> 
       <jvmarg value="-DDEBUG"/>
       <jvmarg value="-Dinstall.dir=${install.dir}"/>
       <jvmarg value="-Djdk.home=${jdk.home}"/>
       <jvmarg value="-Djava.security.manager"/>
       <jvmarg value="-Djava.security.policy=${etc}/jaas.policy"/>
       <jvmarg value="-Djava.security.auth.login.config=${etc}/login.conf"/>
       <arg value="${etc}/jaas.xml"/>
     </java>
-->
     <java fork="true" classname="org.mortbay.jetty.Server" dir="${jetty.home}"> 
       <jvmarg value="-DDEBUG"/>
       <jvmarg value="-Dinstall.dir=${install.dir}"/>
       <jvmarg value="-Djetty.home=${jetty.home}"/>
       <jvmarg value="-Djdk.home=${jdk.home}"/>
       <jvmarg value="-Djava.security.manager"/>
       <jvmarg value="-Djava.security.policy=${etc}/jaas.policy"/>
       <jvmarg value="-Djava.security.auth.login.config=${etc}/login.conf"/>
       <arg value="${etc}/jaas.xml"/>
       <classpath>
         <path refid="classpath"/>
	 <pathelement path="${jaas.jar}"/> 
       </classpath>
     </java>
  </target>


  <!-- ==================================================================== -->
  <!-- test                                                                 -->
  <!-- ==================================================================== -->
  <target name="check.tests" description="check to see if there are any tests">
    <available property="tests.available" file="${test}/build.xml"/>
  </target>

  <target name="test" depends="check.tests" if="tests.available" description="run all jettyplus tests">
    <ant antfile="${test}/build.xml" inheritAll="false" target="test"/>
  </target>



  <!-- ==================================================================== -->
  <!-- all                                                                  -->
  <!-- ==================================================================== -->
  <target name="all" depends="clean, jars" description="default">
  </target>
</project>
